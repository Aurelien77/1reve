{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aurel\\\\Desktop\\\\test_site_piano.back\\\\Test_site_piano\\\\AurelienMonceau_7_20042021-master\\\\frontend\\\\src\\\\pages\\\\Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../helpers/AuthContext\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  commentaire: Yup.string().required(\"Vous devez entrer un titre\"),\n  postText: Yup.string().min(8).max(60000).required(\"Vous devez entrer du texte\"),\n  lien: Yup.string().notRequired(\"Vous pouvez poster sans insÃ©rer de lien\")\n});\nconst initialValues = {\n  commentaire: \"\"\n};\n\nfunction Post() {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  const [postObject, setPostObject] = useState({});\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const {\n    authState\n  } = useContext(AuthContext);\n  let history = useHistory();\n  useEffect(() => {\n    axios.get(`http://localhost:3001/posts/byId/${id}`).then(response => {\n      setPostObject(response.data);\n    });\n    axios.get(`hhttp://localhost:3001/comments/${id}`).then(response => {\n      setComments(response.data);\n    });\n  }, []);\n\n  const addComment = () => {\n    axios.post(\"http://localhost:3001/comments\", {\n      commentBody: newComment,\n      PostId: id\n    }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.data.error) {\n        console.log(response.data.error);\n      } else {\n        const commentToAdd = {\n          commentBody: newComment,\n          username: response.data.username\n        };\n        setComments([...comments, commentToAdd]);\n        setNewComment(\"\");\n      }\n    });\n  };\n\n  const deleteComment = id => {\n    axios.delete(`http://localhost:3001/comments/${id}`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(() => {\n      setComments(comments.filter(val => {\n        return val.id !== id;\n      }));\n    });\n  };\n\n  const deletePost = id => {\n    axios.delete(`http://localhost:3001/posts/${id}`, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(() => {\n      history.push(\"/\");\n    });\n  };\n\n  const editPost = option => {\n    if (option === \"title\") {\n      let newTitle = prompt(\"Entrer un nouveau titre:\");\n      axios.put(\"https://reves-de-piano.herokuapp.com/posts/title\", {\n        newTitle: newTitle,\n        id: id\n      }, {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      });\n      setPostObject({ ...postObject,\n        title: newTitle\n      });\n    } else {\n      let newPostText = prompt(\"Entrer un nouveau texte:\");\n      axios.put(\"https://reves-de-piano.herokuapp.com/posts/postText\", {\n        newText: newPostText,\n        id: id\n      }, {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      });\n      setPostObject({ ...postObject,\n        postText: newPostText\n      });\n    }\n  };\n\n  const mode = () => {\n    window.location.reload(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"indivi\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modif\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"boutonmodif\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: mode,\n          children: \"\\uD83D\\uDCD1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postPage\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        id: \"individual\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          onClick: () => {\n            if (authState.username === postObject.username) {\n              editPost(\"title\");\n            }\n          },\n          children: postObject.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body\",\n          onClick: () => {\n            if (authState.username === postObject.username) {\n              editPost(\"body\");\n            }\n          },\n          children: [postObject.postText, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lien\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              target: \"blank\",\n              className: \"lien\",\n              href: postObject.lien,\n              children: postObject.lien\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          children: [postObject.username, (authState.username === postObject.username || authState.admin === true) && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              deletePost(postObject.id);\n            },\n            children: [\" \", \"Supprimer le Post\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightSide\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addCommentContainer\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initialValues,\n          onClic: addComment,\n          validationSchema: validationSchema,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            className: \"formcommentaire\",\n            id: \"commentaire\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              component: \"textarea\",\n              rows: \"8\",\n              cols: \"45\",\n              autocomplete: \"off\",\n              id: \"comment\",\n              name: \"commentaire\",\n              placeholder: \"(Ex. Tr\\xE8s sympa !...)\",\n              value: newComment,\n              onChange: event => {\n                setNewComment(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"boutoncommentaire\",\n              onClick: addComment,\n              children: [\" \", \"Ajouter un commentaire\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listOfComments\",\n        children: comments.map((comment, key) => {\n          //Map argument de tableau\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment\",\n            children: [comment.commentBody, /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\" Post\\xE9 par \", comment.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), (authState.username === comment.username || authState.admin === true) && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                deleteComment(comment.id);\n              },\n              children: \"Suppprimer X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post, \"CXbvkMaogpoT8Q9VFd6tUCx+sQk=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/aurel/Desktop/test_site_piano.back/Test_site_piano/AurelienMonceau_7_20042021-master/frontend/src/pages/Post.js"],"names":["React","useEffect","useState","useContext","useParams","useHistory","axios","AuthContext","Formik","Form","Field","Yup","validationSchema","object","shape","commentaire","string","required","postText","min","max","lien","notRequired","initialValues","Post","id","postObject","setPostObject","comments","setComments","newComment","setNewComment","authState","history","get","then","response","data","addComment","post","commentBody","PostId","headers","accessToken","localStorage","getItem","error","console","log","commentToAdd","username","deleteComment","delete","filter","val","deletePost","push","editPost","option","newTitle","prompt","put","title","newPostText","newText","mode","window","location","reload","admin","event","target","value","map","comment","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../helpers/AuthContext\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst validationSchema = Yup.object().shape({\n  commentaire: Yup.string().required(\"Vous devez entrer un titre\"),\n  postText: Yup.string()\n    .min(8)\n    .max(60000)\n    .required(\"Vous devez entrer du texte\"),\n  lien: Yup.string().notRequired(\"Vous pouvez poster sans insÃ©rer de lien\"),\n});\nconst initialValues = {\n  commentaire: \"\",\n};\n\nfunction Post() {\n  let { id } = useParams();\n  const [postObject, setPostObject] = useState({});\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const { authState } = useContext(AuthContext);\n\n  let history = useHistory();\n\n  useEffect(() => {\n    axios.get(`http://localhost:3001/posts/byId/${id}`).then((response) => {\n      setPostObject(response.data);\n    });\n\n    axios.get(`hhttp://localhost:3001/comments/${id}`).then((response) => {\n      setComments(response.data);\n    });\n  }, []);\n\n  const addComment = () => {\n    axios\n      .post(\n        \"http://localhost:3001/comments\",\n        {\n          commentBody: newComment,\n          PostId: id,\n        },\n        {\n          headers: {\n            accessToken: localStorage.getItem(\"accessToken\"),\n          },\n        }\n      )\n      .then((response) => {\n        if (response.data.error) {\n          console.log(response.data.error);\n        } else {\n          const commentToAdd = {\n            commentBody: newComment,\n            username: response.data.username,\n          };\n          setComments([...comments, commentToAdd]);\n          setNewComment(\"\");\n        }\n      });\n  };\n\n  const deleteComment = (id) => {\n    axios\n      .delete(`http://localhost:3001/comments/${id}`, {\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\n      })\n      .then(() => {\n        setComments(\n          comments.filter((val) => {\n            return val.id !== id;\n          })\n        );\n      });\n  };\n\n  const deletePost = (id) => {\n    axios\n      .delete(`http://localhost:3001/posts/${id}`, {\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\n      })\n      .then(() => {\n        history.push(\"/\");\n      });\n  };\n\n  const editPost = (option) => {\n    if (option === \"title\") {\n      let newTitle = prompt(\"Entrer un nouveau titre:\");\n      axios.put(\n        \"https://reves-de-piano.herokuapp.com/posts/title\",\n        {\n          newTitle: newTitle,\n          id: id,\n        },\n        {\n          headers: { accessToken: localStorage.getItem(\"accessToken\") },\n        }\n      );\n\n      setPostObject({ ...postObject, title: newTitle });\n    } else {\n      let newPostText = prompt(\"Entrer un nouveau texte:\");\n      axios.put(\n        \"https://reves-de-piano.herokuapp.com/posts/postText\",\n        {\n          newText: newPostText,\n          id: id,\n        },\n        {\n          headers: { accessToken: localStorage.getItem(\"accessToken\") },\n        }\n      );\n\n      setPostObject({ ...postObject, postText: newPostText });\n    }\n  };\n  const mode = () => {\n    window.location.reload(false);\n  };\n  return (\n    <div className=\"indivi\">\n      <div className=\"modif\">\n        {\" \"}\n        <span className=\"boutonmodif\">\n          <button onClick={mode}>ð</button>\n        </span>\n      </div>\n      <div className=\"postPage\">\n        <div className=\"post\" id=\"individual\">\n          <div\n            className=\"title\"\n            onClick={() => {\n              if (authState.username === postObject.username) {\n                editPost(\"title\");\n              }\n            }}\n          >\n            {postObject.title}\n          </div>\n          <div\n            className=\"body\"\n            onClick={() => {\n              if (authState.username === postObject.username) {\n                editPost(\"body\");\n              }\n            }}\n          >\n            {postObject.postText}\n            <div className=\"lien\">\n              <a target=\"blank\" className=\"lien\" href={postObject.lien}>\n                {postObject.lien}\n              </a>\n            </div>\n          </div>\n\n          <div className=\"footer\">\n            {postObject.username}\n\n            {(authState.username === postObject.username ||\n              authState.admin === true) && (\n              <button\n                onClick={() => {\n                  deletePost(postObject.id);\n                }}\n              >\n                {\" \"}\n                Supprimer le Post\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"rightSide\">\n        <div className=\"addCommentContainer\">\n          <Formik\n            initialValues={initialValues}\n            onClic={addComment}\n            validationSchema={validationSchema}\n          >\n            <Form className=\"formcommentaire\" id=\"commentaire\">\n              <label></label>\n              {/*    <ErrorMessage name=\"commentaire\" component=\"span\" /> */}\n\n              <Field\n                component=\"textarea\"\n                rows=\"8\"\n                cols=\"45\"\n                autocomplete=\"off\"\n                id=\"comment\"\n                name=\"commentaire\"\n                placeholder=\"(Ex. TrÃ¨s sympa !...)\"\n                value={newComment}\n                onChange={(event) => {\n                  setNewComment(event.target.value);\n                }}\n              />\n              <button className=\"boutoncommentaire\" onClick={addComment}>\n                {\" \"}\n                Ajouter un commentaire\n              </button>\n            </Form>\n          </Formik>\n        </div>\n        <div className=\"listOfComments\">\n          {comments.map((comment, key) => {\n            //Map argument de tableau\n            return (\n              <div key={key} className=\"comment\">\n                {comment.commentBody}\n\n                <label> PostÃ© par {comment.username}</label>\n                {(authState.username === comment.username ||\n                  authState.admin === true) && (\n                  <button\n                    onClick={() => {\n                      deleteComment(comment.id);\n                    }}\n                  >\n                    Suppprimer X\n                  </button>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}